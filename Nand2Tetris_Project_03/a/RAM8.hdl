// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8way(in=load, sel=address, a=enA, b=enB, c=enC, d=enD, e=enE, f=enF, g=enG, h=enH);
    Register(in=in, load=enA, out=salA);
    Register(in=in, load=enB, out=salB);
    Register(in=in, load=enC, out=salC);
    Register(in=in, load=enD, out=salD);
    Register(in=in, load=enE, out=salE);
    Register(in=in, load=enF, out=salF);
    Register(in=in, load=enG, out=salG);
    Register(in=in, load=enH, out=salH);
    Mux8Way16(a=salA, b=salB, c=salC, d=salD, e=salE, f=salF, g=salG, h=salH, sel=address, out=out);
}